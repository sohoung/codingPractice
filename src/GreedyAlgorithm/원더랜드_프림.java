package GreedyAlgorithm;
import java.util.Scanner;

// 설명 : 원더랜드에 문제가 생겼다. 원더랜드의 각 도로를 유지보수하는 재정이 바닥난 것이다.
//       원더랜드는 모든 도시를 서로 연결하면서 최소의 유지비용이 들도록 도로를 선택하고 나머지 도로는 폐쇄하려고 한다.
//       아래의 그림은 그 한 예를 설명하는 그림이다.
//       위의 지도는 각 도시가 1부터 9로 표현되었고, 지도의 오른쪽은 최소비용 196으로 모든 도시를 연결하는 방법을 찾아낸 것이다.
// 입력 예시 : 9 12
//           1 2 12
//           1 9 25
//           2 3 10
//           2 8 17
//           2 9 8
//           3 4 18
//           3 7 55
//           4 5 44
//           5 6 60
//           5 7 38
//           7 8 35
//           8 9 15
// 출력 예시 : 196
// 최소 스패닝 트리 : 한 그래프의 스패닝 트리 중에서 가중값의 합이 제일 적은 것
// 스패닝 트리 : 그래프 안에 있는 모든 정점을 다 포함하면서 트리가 되는 연결된 부분 그래프이다.


public class 원더랜드_프림 {
    public static void main(String[] args) {
        원더랜드_프림  m = new 원더랜드_프림();
        Scanner sc = new Scanner(System.in);
    }
}
