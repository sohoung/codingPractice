package Array;
import java.util.Scanner;

// 설명 : 김갑동 선생님은 올해 6학년 1반 담임을 맡게 되었다.
//       김갑동 선생님은 우선 임시로 반장을 정하고 학생들이 서로 친숙해진 후에 정식으로 선거를 통해 반장을 선출하려고 한다.
//       그는 자기반 학생 중에서 1학년부터 5학년까지 지내오면서 한번이라도 같은 반이었던 사람이 가장 많은 학생을 임시 반장으로 정하려 한다.
//       그래서 김갑동 선생님은 각 학생들이 1학년부터 5학년까지 몇 반에 속했었는지를 나타내는 표를 만들었다.
//       예를 들어 학생 수가 5명일 때의 표를 살펴보자.
//       위 경우에 4번 학생을 보면 3번 학생과 2학년 때 같은 반이었고, 3번 학생 및 5번 학생과 3학년 때 같은 반이었으며,
//       2번 학생과는 4학년 때 같은 반이었음을 알 수 있다. 그러므로 이 학급에서 4번 학생과 한번이라도
//       같은 반이었던 사람은 2번 학생, 3번 학생과 5번 학생으로 모두 3명이다.
//       이 예에서 4번 학생이 전체 학생 중에서 같은 반이었던 학생 수가 제일 많으므로 임시 반장이 된다.
//       각 학생들이 1학년부터 5학년까지 속했던 반이 주어질 때, 임시 반장을 정하는 프로그램을 작성하시오.
// 입력 예시 : 5
//          2 3 1 7 3
//          4 1 9 6 8
//          5 5 2 4 4
//          6 5 2 6 7
//          8 4 2 2 2
// 출력 예시 : 4
public class 임시반장정하기 {
    public int solution(int[][] arr, int n) {
        int answer = 0;
        int max = 0;   // 서로 같은 반이 된 횟수중에서 제일많은 숫자를 저장하는 변수
        for(int i = 1; i <= n; i++) {  // int형 변수 i를 1로 시작한 이유는 i자체를 학생번호로 생각하기 때문에 0번 학생은 없으므로 1부터 시작한다.
            int cnt = 0;  // 같은 반으로 만난 횟수
            for(int j = 1; j <= n; j++) {
                for(int k = 1; k <= n; k++) {  // int형 변수 k는 학년을 나타낸다.
                    if(arr[i][k] == arr[j][k]) {
                        cnt++;
                        break;  // 어차피 1번만 만나면 카운트하고 다음 학생으로 넘어가야하므로 if문이 true라면 바로 cnt를 1증가해주고 break로 for문을 빠져나온다.
                    }
                }
            }
            if(cnt>max) {
                max = cnt;
                answer = i;  // 최종적으로 몇 번학생이 제일 많이 만났는지 구하는 문제이므로 i를 answer에 넣어준다.
            }
        }
        return answer;
    }
    public static void main(String[] args) {
        임시반장정하기 m  = new 임시반장정하기();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] arr = new int[n+1][6];
        for(int i = 1; i < n; i++) {
            for(int j = 1; j <= 5; j++) {
                arr[i][j] = sc.nextInt();
            }
        }
        System.out.print(m.solution(arr,n));
    }
}
